syntax = "proto3";
package plasticcreditledger.plasticcredits;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "plasticcredits/params.proto";
import "plasticcredits/issuer.proto";
import "plasticcredits/approved_collector.proto";
import "plasticcredits/credit.proto";
// this line is used by starport scaffolding # 1

option go_package = "plasticcreditledger/x/plasticcredits/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/plasticcreditledger/plasticcredits/params";
  }
  // Queries a Issuer by index.
	rpc Issuer(QueryGetIssuerRequest) returns (QueryGetIssuerResponse) {
		option (google.api.http).get = "/plasticcreditledger/plasticcredits/issuer/{addr}";
	}

	// Queries a list of Issuer items.
	rpc IssuerAll(QueryAllIssuerRequest) returns (QueryAllIssuerResponse) {
		option (google.api.http).get = "/plasticcreditledger/plasticcredits/issuer";
	}

// Queries a ApprovedCollector by index.
	rpc ApprovedCollector(QueryGetApprovedCollectorRequest) returns (QueryGetApprovedCollectorResponse) {
		option (google.api.http).get = "/plasticcreditledger/plasticcredits/approved_collector/{addr}/{issuer}";
	}

	// Queries a list of ApprovedCollector items.
	rpc ApprovedCollectorAll(QueryAllApprovedCollectorRequest) returns (QueryAllApprovedCollectorResponse) {
		option (google.api.http).get = "/plasticcreditledger/plasticcredits/approved_collector";
	}

// Queries a Credit by index.
	rpc Credit(QueryGetCreditRequest) returns (QueryGetCreditResponse) {
		option (google.api.http).get = "/plasticcreditledger/plasticcredits/credit/{index}";
	}

	// Queries a list of Credit items.
	rpc CreditAll(QueryAllCreditRequest) returns (QueryAllCreditResponse) {
		option (google.api.http).get = "/plasticcreditledger/plasticcredits/credit";
	}

// Queries a list of IsApproved items.
	rpc IsApproved(QueryIsApprovedRequest) returns (QueryIsApprovedResponse) {
		option (google.api.http).get = "/plasticcreditledger/plasticcredits/is_approved/{addr}";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetIssuerRequest {
	  string addr = 1;

}

message QueryGetIssuerResponse {
	Issuer issuer = 1 [(gogoproto.nullable) = false];
}

message QueryAllIssuerRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllIssuerResponse {
	repeated Issuer issuer = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetApprovedCollectorRequest {
	  string addr = 1;
  string issuer = 2;

}

message QueryGetApprovedCollectorResponse {
	ApprovedCollector approvedCollector = 1 [(gogoproto.nullable) = false];
}

message QueryAllApprovedCollectorRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllApprovedCollectorResponse {
	repeated ApprovedCollector approvedCollector = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetCreditRequest {
	  string index = 1;

}

message QueryGetCreditResponse {
	Credit credit = 1 [(gogoproto.nullable) = false];
}

message QueryAllCreditRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllCreditResponse {
	repeated Credit credit = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryIsApprovedRequest {
  string addr = 1;
}

message QueryIsApprovedResponse {
  string approved = 1;
}

// this line is used by starport scaffolding # 3
