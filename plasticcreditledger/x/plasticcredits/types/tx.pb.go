// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: plasticcredits/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateIssuer struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Addr    string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *MsgCreateIssuer) Reset()         { *m = MsgCreateIssuer{} }
func (m *MsgCreateIssuer) String() string { return proto.CompactTextString(m) }
func (*MsgCreateIssuer) ProtoMessage()    {}
func (*MsgCreateIssuer) Descriptor() ([]byte, []int) {
	return fileDescriptor_31204beb98f14bb9, []int{0}
}
func (m *MsgCreateIssuer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateIssuer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateIssuer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateIssuer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateIssuer.Merge(m, src)
}
func (m *MsgCreateIssuer) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateIssuer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateIssuer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateIssuer proto.InternalMessageInfo

func (m *MsgCreateIssuer) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateIssuer) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *MsgCreateIssuer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type MsgCreateIssuerResponse struct {
}

func (m *MsgCreateIssuerResponse) Reset()         { *m = MsgCreateIssuerResponse{} }
func (m *MsgCreateIssuerResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateIssuerResponse) ProtoMessage()    {}
func (*MsgCreateIssuerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_31204beb98f14bb9, []int{1}
}
func (m *MsgCreateIssuerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateIssuerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateIssuerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateIssuerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateIssuerResponse.Merge(m, src)
}
func (m *MsgCreateIssuerResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateIssuerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateIssuerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateIssuerResponse proto.InternalMessageInfo

type MsgUpdateIssuer struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Addr    string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *MsgUpdateIssuer) Reset()         { *m = MsgUpdateIssuer{} }
func (m *MsgUpdateIssuer) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateIssuer) ProtoMessage()    {}
func (*MsgUpdateIssuer) Descriptor() ([]byte, []int) {
	return fileDescriptor_31204beb98f14bb9, []int{2}
}
func (m *MsgUpdateIssuer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateIssuer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateIssuer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateIssuer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateIssuer.Merge(m, src)
}
func (m *MsgUpdateIssuer) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateIssuer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateIssuer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateIssuer proto.InternalMessageInfo

func (m *MsgUpdateIssuer) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateIssuer) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *MsgUpdateIssuer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type MsgUpdateIssuerResponse struct {
}

func (m *MsgUpdateIssuerResponse) Reset()         { *m = MsgUpdateIssuerResponse{} }
func (m *MsgUpdateIssuerResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateIssuerResponse) ProtoMessage()    {}
func (*MsgUpdateIssuerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_31204beb98f14bb9, []int{3}
}
func (m *MsgUpdateIssuerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateIssuerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateIssuerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateIssuerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateIssuerResponse.Merge(m, src)
}
func (m *MsgUpdateIssuerResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateIssuerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateIssuerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateIssuerResponse proto.InternalMessageInfo

type MsgDeleteIssuer struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Addr    string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (m *MsgDeleteIssuer) Reset()         { *m = MsgDeleteIssuer{} }
func (m *MsgDeleteIssuer) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteIssuer) ProtoMessage()    {}
func (*MsgDeleteIssuer) Descriptor() ([]byte, []int) {
	return fileDescriptor_31204beb98f14bb9, []int{4}
}
func (m *MsgDeleteIssuer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteIssuer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteIssuer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteIssuer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteIssuer.Merge(m, src)
}
func (m *MsgDeleteIssuer) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteIssuer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteIssuer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteIssuer proto.InternalMessageInfo

func (m *MsgDeleteIssuer) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteIssuer) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type MsgDeleteIssuerResponse struct {
}

func (m *MsgDeleteIssuerResponse) Reset()         { *m = MsgDeleteIssuerResponse{} }
func (m *MsgDeleteIssuerResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteIssuerResponse) ProtoMessage()    {}
func (*MsgDeleteIssuerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_31204beb98f14bb9, []int{5}
}
func (m *MsgDeleteIssuerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteIssuerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteIssuerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteIssuerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteIssuerResponse.Merge(m, src)
}
func (m *MsgDeleteIssuerResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteIssuerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteIssuerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteIssuerResponse proto.InternalMessageInfo

type MsgCreateApprovedCollector struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Addr    string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Issuer  string `protobuf:"bytes,4,opt,name=issuer,proto3" json:"issuer,omitempty"`
}

func (m *MsgCreateApprovedCollector) Reset()         { *m = MsgCreateApprovedCollector{} }
func (m *MsgCreateApprovedCollector) String() string { return proto.CompactTextString(m) }
func (*MsgCreateApprovedCollector) ProtoMessage()    {}
func (*MsgCreateApprovedCollector) Descriptor() ([]byte, []int) {
	return fileDescriptor_31204beb98f14bb9, []int{6}
}
func (m *MsgCreateApprovedCollector) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateApprovedCollector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateApprovedCollector.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateApprovedCollector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateApprovedCollector.Merge(m, src)
}
func (m *MsgCreateApprovedCollector) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateApprovedCollector) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateApprovedCollector.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateApprovedCollector proto.InternalMessageInfo

func (m *MsgCreateApprovedCollector) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateApprovedCollector) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *MsgCreateApprovedCollector) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgCreateApprovedCollector) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

type MsgCreateApprovedCollectorResponse struct {
}

func (m *MsgCreateApprovedCollectorResponse) Reset()         { *m = MsgCreateApprovedCollectorResponse{} }
func (m *MsgCreateApprovedCollectorResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateApprovedCollectorResponse) ProtoMessage()    {}
func (*MsgCreateApprovedCollectorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_31204beb98f14bb9, []int{7}
}
func (m *MsgCreateApprovedCollectorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateApprovedCollectorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateApprovedCollectorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateApprovedCollectorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateApprovedCollectorResponse.Merge(m, src)
}
func (m *MsgCreateApprovedCollectorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateApprovedCollectorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateApprovedCollectorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateApprovedCollectorResponse proto.InternalMessageInfo

type MsgUpdateApprovedCollector struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Addr    string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Issuer  string `protobuf:"bytes,4,opt,name=issuer,proto3" json:"issuer,omitempty"`
}

func (m *MsgUpdateApprovedCollector) Reset()         { *m = MsgUpdateApprovedCollector{} }
func (m *MsgUpdateApprovedCollector) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateApprovedCollector) ProtoMessage()    {}
func (*MsgUpdateApprovedCollector) Descriptor() ([]byte, []int) {
	return fileDescriptor_31204beb98f14bb9, []int{8}
}
func (m *MsgUpdateApprovedCollector) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateApprovedCollector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateApprovedCollector.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateApprovedCollector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateApprovedCollector.Merge(m, src)
}
func (m *MsgUpdateApprovedCollector) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateApprovedCollector) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateApprovedCollector.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateApprovedCollector proto.InternalMessageInfo

func (m *MsgUpdateApprovedCollector) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateApprovedCollector) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *MsgUpdateApprovedCollector) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgUpdateApprovedCollector) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

type MsgUpdateApprovedCollectorResponse struct {
}

func (m *MsgUpdateApprovedCollectorResponse) Reset()         { *m = MsgUpdateApprovedCollectorResponse{} }
func (m *MsgUpdateApprovedCollectorResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateApprovedCollectorResponse) ProtoMessage()    {}
func (*MsgUpdateApprovedCollectorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_31204beb98f14bb9, []int{9}
}
func (m *MsgUpdateApprovedCollectorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateApprovedCollectorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateApprovedCollectorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateApprovedCollectorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateApprovedCollectorResponse.Merge(m, src)
}
func (m *MsgUpdateApprovedCollectorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateApprovedCollectorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateApprovedCollectorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateApprovedCollectorResponse proto.InternalMessageInfo

type MsgDeleteApprovedCollector struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Addr    string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Issuer  string `protobuf:"bytes,3,opt,name=issuer,proto3" json:"issuer,omitempty"`
}

func (m *MsgDeleteApprovedCollector) Reset()         { *m = MsgDeleteApprovedCollector{} }
func (m *MsgDeleteApprovedCollector) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteApprovedCollector) ProtoMessage()    {}
func (*MsgDeleteApprovedCollector) Descriptor() ([]byte, []int) {
	return fileDescriptor_31204beb98f14bb9, []int{10}
}
func (m *MsgDeleteApprovedCollector) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteApprovedCollector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteApprovedCollector.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteApprovedCollector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteApprovedCollector.Merge(m, src)
}
func (m *MsgDeleteApprovedCollector) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteApprovedCollector) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteApprovedCollector.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteApprovedCollector proto.InternalMessageInfo

func (m *MsgDeleteApprovedCollector) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteApprovedCollector) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *MsgDeleteApprovedCollector) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

type MsgDeleteApprovedCollectorResponse struct {
}

func (m *MsgDeleteApprovedCollectorResponse) Reset()         { *m = MsgDeleteApprovedCollectorResponse{} }
func (m *MsgDeleteApprovedCollectorResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteApprovedCollectorResponse) ProtoMessage()    {}
func (*MsgDeleteApprovedCollectorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_31204beb98f14bb9, []int{11}
}
func (m *MsgDeleteApprovedCollectorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteApprovedCollectorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteApprovedCollectorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteApprovedCollectorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteApprovedCollectorResponse.Merge(m, src)
}
func (m *MsgDeleteApprovedCollectorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteApprovedCollectorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteApprovedCollectorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteApprovedCollectorResponse proto.InternalMessageInfo

type MsgIssueCredits struct {
	Issuer      string `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Collector   string `protobuf:"bytes,2,opt,name=collector,proto3" json:"collector,omitempty"`
	Material    string `protobuf:"bytes,3,opt,name=material,proto3" json:"material,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Image       string `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	Lat         string `protobuf:"bytes,6,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng         string `protobuf:"bytes,7,opt,name=lng,proto3" json:"lng,omitempty"`
}

func (m *MsgIssueCredits) Reset()         { *m = MsgIssueCredits{} }
func (m *MsgIssueCredits) String() string { return proto.CompactTextString(m) }
func (*MsgIssueCredits) ProtoMessage()    {}
func (*MsgIssueCredits) Descriptor() ([]byte, []int) {
	return fileDescriptor_31204beb98f14bb9, []int{12}
}
func (m *MsgIssueCredits) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgIssueCredits) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgIssueCredits.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgIssueCredits) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgIssueCredits.Merge(m, src)
}
func (m *MsgIssueCredits) XXX_Size() int {
	return m.Size()
}
func (m *MsgIssueCredits) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgIssueCredits.DiscardUnknown(m)
}

var xxx_messageInfo_MsgIssueCredits proto.InternalMessageInfo

func (m *MsgIssueCredits) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *MsgIssueCredits) GetCollector() string {
	if m != nil {
		return m.Collector
	}
	return ""
}

func (m *MsgIssueCredits) GetMaterial() string {
	if m != nil {
		return m.Material
	}
	return ""
}

func (m *MsgIssueCredits) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgIssueCredits) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *MsgIssueCredits) GetLat() string {
	if m != nil {
		return m.Lat
	}
	return ""
}

func (m *MsgIssueCredits) GetLng() string {
	if m != nil {
		return m.Lng
	}
	return ""
}

type MsgIssueCreditsResponse struct {
}

func (m *MsgIssueCreditsResponse) Reset()         { *m = MsgIssueCreditsResponse{} }
func (m *MsgIssueCreditsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgIssueCreditsResponse) ProtoMessage()    {}
func (*MsgIssueCreditsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_31204beb98f14bb9, []int{13}
}
func (m *MsgIssueCreditsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgIssueCreditsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgIssueCreditsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgIssueCreditsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgIssueCreditsResponse.Merge(m, src)
}
func (m *MsgIssueCreditsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgIssueCreditsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgIssueCreditsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgIssueCreditsResponse proto.InternalMessageInfo

type MsgTransferCredit struct {
	Owner    string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Index    string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	NewOwner string `protobuf:"bytes,3,opt,name=newOwner,proto3" json:"newOwner,omitempty"`
}

func (m *MsgTransferCredit) Reset()         { *m = MsgTransferCredit{} }
func (m *MsgTransferCredit) String() string { return proto.CompactTextString(m) }
func (*MsgTransferCredit) ProtoMessage()    {}
func (*MsgTransferCredit) Descriptor() ([]byte, []int) {
	return fileDescriptor_31204beb98f14bb9, []int{14}
}
func (m *MsgTransferCredit) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTransferCredit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTransferCredit.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTransferCredit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTransferCredit.Merge(m, src)
}
func (m *MsgTransferCredit) XXX_Size() int {
	return m.Size()
}
func (m *MsgTransferCredit) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTransferCredit.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTransferCredit proto.InternalMessageInfo

func (m *MsgTransferCredit) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *MsgTransferCredit) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgTransferCredit) GetNewOwner() string {
	if m != nil {
		return m.NewOwner
	}
	return ""
}

type MsgTransferCreditResponse struct {
}

func (m *MsgTransferCreditResponse) Reset()         { *m = MsgTransferCreditResponse{} }
func (m *MsgTransferCreditResponse) String() string { return proto.CompactTextString(m) }
func (*MsgTransferCreditResponse) ProtoMessage()    {}
func (*MsgTransferCreditResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_31204beb98f14bb9, []int{15}
}
func (m *MsgTransferCreditResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTransferCreditResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTransferCreditResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTransferCreditResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTransferCreditResponse.Merge(m, src)
}
func (m *MsgTransferCreditResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgTransferCreditResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTransferCreditResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTransferCreditResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateIssuer)(nil), "plasticcreditledger.plasticcredits.MsgCreateIssuer")
	proto.RegisterType((*MsgCreateIssuerResponse)(nil), "plasticcreditledger.plasticcredits.MsgCreateIssuerResponse")
	proto.RegisterType((*MsgUpdateIssuer)(nil), "plasticcreditledger.plasticcredits.MsgUpdateIssuer")
	proto.RegisterType((*MsgUpdateIssuerResponse)(nil), "plasticcreditledger.plasticcredits.MsgUpdateIssuerResponse")
	proto.RegisterType((*MsgDeleteIssuer)(nil), "plasticcreditledger.plasticcredits.MsgDeleteIssuer")
	proto.RegisterType((*MsgDeleteIssuerResponse)(nil), "plasticcreditledger.plasticcredits.MsgDeleteIssuerResponse")
	proto.RegisterType((*MsgCreateApprovedCollector)(nil), "plasticcreditledger.plasticcredits.MsgCreateApprovedCollector")
	proto.RegisterType((*MsgCreateApprovedCollectorResponse)(nil), "plasticcreditledger.plasticcredits.MsgCreateApprovedCollectorResponse")
	proto.RegisterType((*MsgUpdateApprovedCollector)(nil), "plasticcreditledger.plasticcredits.MsgUpdateApprovedCollector")
	proto.RegisterType((*MsgUpdateApprovedCollectorResponse)(nil), "plasticcreditledger.plasticcredits.MsgUpdateApprovedCollectorResponse")
	proto.RegisterType((*MsgDeleteApprovedCollector)(nil), "plasticcreditledger.plasticcredits.MsgDeleteApprovedCollector")
	proto.RegisterType((*MsgDeleteApprovedCollectorResponse)(nil), "plasticcreditledger.plasticcredits.MsgDeleteApprovedCollectorResponse")
	proto.RegisterType((*MsgIssueCredits)(nil), "plasticcreditledger.plasticcredits.MsgIssueCredits")
	proto.RegisterType((*MsgIssueCreditsResponse)(nil), "plasticcreditledger.plasticcredits.MsgIssueCreditsResponse")
	proto.RegisterType((*MsgTransferCredit)(nil), "plasticcreditledger.plasticcredits.MsgTransferCredit")
	proto.RegisterType((*MsgTransferCreditResponse)(nil), "plasticcreditledger.plasticcredits.MsgTransferCreditResponse")
}

func init() { proto.RegisterFile("plasticcredits/tx.proto", fileDescriptor_31204beb98f14bb9) }

var fileDescriptor_31204beb98f14bb9 = []byte{
	// 595 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xcf, 0x8b, 0xd3, 0x40,
	0x14, 0xee, 0xd8, 0xdd, 0xae, 0x7d, 0x8a, 0x3f, 0x06, 0xb1, 0xd9, 0xac, 0x84, 0x25, 0x08, 0x8a,
	0x87, 0x16, 0x5c, 0x3c, 0x89, 0x15, 0xed, 0x22, 0x78, 0x28, 0xc2, 0xaa, 0x17, 0x3d, 0xc8, 0x6c,
	0xf2, 0x0c, 0x81, 0x34, 0x09, 0x33, 0x71, 0xb7, 0xde, 0x3c, 0xed, 0xd9, 0x7f, 0xc1, 0xbf, 0xc4,
	0xab, 0xc7, 0x3d, 0x7a, 0x94, 0xf6, 0x1f, 0x91, 0x4c, 0x26, 0xd9, 0x24, 0x9b, 0xd0, 0x34, 0x15,
	0x6f, 0xf3, 0xde, 0xcc, 0xfb, 0xbe, 0xef, 0xbd, 0x99, 0x7c, 0x04, 0x06, 0xa1, 0xc7, 0x44, 0xe4,
	0x5a, 0x16, 0x47, 0xdb, 0x8d, 0xc4, 0x28, 0x9a, 0x0f, 0x43, 0x1e, 0x44, 0x01, 0x35, 0x0b, 0x1b,
	0x1e, 0xda, 0x0e, 0xf2, 0x61, 0xf1, 0xb0, 0xbe, 0x57, 0x2a, 0x76, 0x85, 0xf8, 0x12, 0x9f, 0x8a,
	0x01, 0xf4, 0x07, 0xa5, 0x4d, 0x16, 0x86, 0x3c, 0x38, 0x41, 0xfb, 0x93, 0x15, 0x78, 0x1e, 0x5a,
	0x51, 0xa0, 0x0e, 0x9a, 0x6f, 0xe1, 0xe6, 0x54, 0x38, 0x13, 0x8e, 0x2c, 0xc2, 0xd7, 0x12, 0x81,
	0x6a, 0xb0, 0x63, 0xc5, 0x71, 0xc0, 0x35, 0xb2, 0x4f, 0x1e, 0xf6, 0x8f, 0xd2, 0x90, 0x52, 0xd8,
	0x62, 0xb6, 0xcd, 0xb5, 0x2b, 0x32, 0x2d, 0xd7, 0x71, 0xce, 0x67, 0x33, 0xd4, 0xba, 0x49, 0x2e,
	0x5e, 0x9b, 0xbb, 0x30, 0x28, 0x81, 0x1e, 0xa1, 0x08, 0x03, 0x5f, 0xa0, 0xe2, 0x7b, 0x1f, 0xda,
	0xff, 0x9e, 0x2f, 0x0f, 0x9a, 0xf1, 0x3d, 0x97, 0x7c, 0x87, 0xe8, 0x61, 0x3b, 0x3e, 0x85, 0x9d,
	0x07, 0xc8, 0xb0, 0x4f, 0x40, 0xcf, 0xda, 0x7c, 0xa1, 0x06, 0x3c, 0x49, 0xe7, 0xbb, 0x79, 0x5b,
	0xf4, 0x2e, 0xf4, 0x92, 0x4b, 0xd5, 0xb6, 0x64, 0x56, 0x45, 0xe6, 0x7d, 0x30, 0xeb, 0x79, 0x4b,
	0xea, 0x92, 0xa1, 0xfc, 0x7f, 0x75, 0x35, 0xbc, 0x99, 0xba, 0x63, 0xa9, 0x2e, 0x19, 0xeb, 0xa6,
	0xea, 0x2e, 0x94, 0x74, 0x2b, 0x94, 0xd4, 0x70, 0x64, 0x4a, 0x7e, 0x12, 0xf9, 0x44, 0xe4, 0xdd,
	0x4e, 0x92, 0xcf, 0x25, 0x87, 0x48, 0xf2, 0x88, 0xf4, 0x1e, 0xf4, 0xb3, 0x0f, 0x48, 0x49, 0xb8,
	0x48, 0x50, 0x1d, 0xae, 0xce, 0x58, 0x84, 0xdc, 0x65, 0x9e, 0x52, 0x92, 0xc5, 0x74, 0x1f, 0xae,
	0xd9, 0x28, 0x2c, 0xee, 0x86, 0x91, 0x1b, 0xf8, 0x6a, 0x64, 0xf9, 0x14, 0xbd, 0x03, 0xdb, 0xee,
	0x8c, 0x39, 0xa8, 0x6d, 0xcb, 0xbd, 0x24, 0xa0, 0xb7, 0xa0, 0xeb, 0xb1, 0x48, 0xeb, 0xc9, 0x5c,
	0xbc, 0x94, 0x19, 0xdf, 0xd1, 0x76, 0x54, 0xc6, 0x77, 0xd4, 0x13, 0xcd, 0x37, 0x90, 0x35, 0xf7,
	0x11, 0x6e, 0x4f, 0x85, 0xf3, 0x8e, 0x33, 0x5f, 0x7c, 0x46, 0x9e, 0xec, 0xc6, 0x4c, 0xc1, 0xa9,
	0x9f, 0x35, 0x97, 0x04, 0x92, 0xdf, 0xb7, 0x71, 0xae, 0xfa, 0x4a, 0x82, 0xb8, 0x27, 0x1f, 0x4f,
	0xdf, 0xc8, 0xe3, 0xaa, 0xa7, 0x34, 0x36, 0xf7, 0x60, 0xf7, 0x12, 0x78, 0xca, 0xfc, 0xf8, 0xac,
	0x0f, 0xdd, 0xa9, 0x70, 0xe8, 0x37, 0x02, 0xd7, 0x0b, 0xf6, 0x72, 0x30, 0x5c, 0x6d, 0x6e, 0xc3,
	0x92, 0x7d, 0xe8, 0x4f, 0x5b, 0x14, 0xa5, 0x52, 0xa4, 0x84, 0x82, 0xe3, 0x34, 0x95, 0x90, 0x2f,
	0x6a, 0x2c, 0xa1, 0xca, 0x86, 0xa4, 0x84, 0x82, 0x09, 0x35, 0x95, 0x90, 0x2f, 0x6a, 0x2c, 0xa1,
	0xca, 0xad, 0xe8, 0x0f, 0x02, 0x83, 0x3a, 0xaf, 0x1a, 0xaf, 0x35, 0xde, 0x4b, 0xf5, 0xfa, 0xab,
	0xcd, 0xea, 0x0b, 0x1a, 0xeb, 0x1c, 0x6b, 0xbc, 0xd6, 0xfc, 0xdb, 0x6b, 0x5c, 0xe1, 0x5c, 0x52,
	0x63, 0x9d, 0x6f, 0x8d, 0xd7, 0xba, 0xa0, 0xf6, 0x1a, 0x57, 0x78, 0x9a, 0x7c, 0x6e, 0x05, 0x43,
	0x6b, 0xfa, 0xdc, 0xf2, 0x45, 0x8d, 0x9f, 0x5b, 0x95, 0xf3, 0xd0, 0x33, 0x02, 0x37, 0x4a, 0xbe,
	0xf3, 0xa4, 0x21, 0x5e, 0xb1, 0x4c, 0x7f, 0xd6, 0xaa, 0x2c, 0x15, 0xf2, 0xf2, 0xf0, 0xd7, 0xc2,
	0x20, 0xe7, 0x0b, 0x83, 0xfc, 0x59, 0x18, 0xe4, 0xfb, 0xd2, 0xe8, 0x9c, 0x2f, 0x8d, 0xce, 0xef,
	0xa5, 0xd1, 0xf9, 0xf0, 0xa8, 0x02, 0x77, 0x34, 0x1f, 0x95, 0x7f, 0xca, 0xbe, 0x86, 0x28, 0x8e,
	0x7b, 0xf2, 0x77, 0xe9, 0xe0, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x92, 0x81, 0xbe, 0x8e, 0xb3,
	0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateIssuer(ctx context.Context, in *MsgCreateIssuer, opts ...grpc.CallOption) (*MsgCreateIssuerResponse, error)
	UpdateIssuer(ctx context.Context, in *MsgUpdateIssuer, opts ...grpc.CallOption) (*MsgUpdateIssuerResponse, error)
	DeleteIssuer(ctx context.Context, in *MsgDeleteIssuer, opts ...grpc.CallOption) (*MsgDeleteIssuerResponse, error)
	CreateApprovedCollector(ctx context.Context, in *MsgCreateApprovedCollector, opts ...grpc.CallOption) (*MsgCreateApprovedCollectorResponse, error)
	UpdateApprovedCollector(ctx context.Context, in *MsgUpdateApprovedCollector, opts ...grpc.CallOption) (*MsgUpdateApprovedCollectorResponse, error)
	DeleteApprovedCollector(ctx context.Context, in *MsgDeleteApprovedCollector, opts ...grpc.CallOption) (*MsgDeleteApprovedCollectorResponse, error)
	IssueCredits(ctx context.Context, in *MsgIssueCredits, opts ...grpc.CallOption) (*MsgIssueCreditsResponse, error)
	TransferCredit(ctx context.Context, in *MsgTransferCredit, opts ...grpc.CallOption) (*MsgTransferCreditResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateIssuer(ctx context.Context, in *MsgCreateIssuer, opts ...grpc.CallOption) (*MsgCreateIssuerResponse, error) {
	out := new(MsgCreateIssuerResponse)
	err := c.cc.Invoke(ctx, "/plasticcreditledger.plasticcredits.Msg/CreateIssuer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateIssuer(ctx context.Context, in *MsgUpdateIssuer, opts ...grpc.CallOption) (*MsgUpdateIssuerResponse, error) {
	out := new(MsgUpdateIssuerResponse)
	err := c.cc.Invoke(ctx, "/plasticcreditledger.plasticcredits.Msg/UpdateIssuer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteIssuer(ctx context.Context, in *MsgDeleteIssuer, opts ...grpc.CallOption) (*MsgDeleteIssuerResponse, error) {
	out := new(MsgDeleteIssuerResponse)
	err := c.cc.Invoke(ctx, "/plasticcreditledger.plasticcredits.Msg/DeleteIssuer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateApprovedCollector(ctx context.Context, in *MsgCreateApprovedCollector, opts ...grpc.CallOption) (*MsgCreateApprovedCollectorResponse, error) {
	out := new(MsgCreateApprovedCollectorResponse)
	err := c.cc.Invoke(ctx, "/plasticcreditledger.plasticcredits.Msg/CreateApprovedCollector", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateApprovedCollector(ctx context.Context, in *MsgUpdateApprovedCollector, opts ...grpc.CallOption) (*MsgUpdateApprovedCollectorResponse, error) {
	out := new(MsgUpdateApprovedCollectorResponse)
	err := c.cc.Invoke(ctx, "/plasticcreditledger.plasticcredits.Msg/UpdateApprovedCollector", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteApprovedCollector(ctx context.Context, in *MsgDeleteApprovedCollector, opts ...grpc.CallOption) (*MsgDeleteApprovedCollectorResponse, error) {
	out := new(MsgDeleteApprovedCollectorResponse)
	err := c.cc.Invoke(ctx, "/plasticcreditledger.plasticcredits.Msg/DeleteApprovedCollector", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) IssueCredits(ctx context.Context, in *MsgIssueCredits, opts ...grpc.CallOption) (*MsgIssueCreditsResponse, error) {
	out := new(MsgIssueCreditsResponse)
	err := c.cc.Invoke(ctx, "/plasticcreditledger.plasticcredits.Msg/IssueCredits", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) TransferCredit(ctx context.Context, in *MsgTransferCredit, opts ...grpc.CallOption) (*MsgTransferCreditResponse, error) {
	out := new(MsgTransferCreditResponse)
	err := c.cc.Invoke(ctx, "/plasticcreditledger.plasticcredits.Msg/TransferCredit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateIssuer(context.Context, *MsgCreateIssuer) (*MsgCreateIssuerResponse, error)
	UpdateIssuer(context.Context, *MsgUpdateIssuer) (*MsgUpdateIssuerResponse, error)
	DeleteIssuer(context.Context, *MsgDeleteIssuer) (*MsgDeleteIssuerResponse, error)
	CreateApprovedCollector(context.Context, *MsgCreateApprovedCollector) (*MsgCreateApprovedCollectorResponse, error)
	UpdateApprovedCollector(context.Context, *MsgUpdateApprovedCollector) (*MsgUpdateApprovedCollectorResponse, error)
	DeleteApprovedCollector(context.Context, *MsgDeleteApprovedCollector) (*MsgDeleteApprovedCollectorResponse, error)
	IssueCredits(context.Context, *MsgIssueCredits) (*MsgIssueCreditsResponse, error)
	TransferCredit(context.Context, *MsgTransferCredit) (*MsgTransferCreditResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateIssuer(ctx context.Context, req *MsgCreateIssuer) (*MsgCreateIssuerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateIssuer not implemented")
}
func (*UnimplementedMsgServer) UpdateIssuer(ctx context.Context, req *MsgUpdateIssuer) (*MsgUpdateIssuerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateIssuer not implemented")
}
func (*UnimplementedMsgServer) DeleteIssuer(ctx context.Context, req *MsgDeleteIssuer) (*MsgDeleteIssuerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteIssuer not implemented")
}
func (*UnimplementedMsgServer) CreateApprovedCollector(ctx context.Context, req *MsgCreateApprovedCollector) (*MsgCreateApprovedCollectorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateApprovedCollector not implemented")
}
func (*UnimplementedMsgServer) UpdateApprovedCollector(ctx context.Context, req *MsgUpdateApprovedCollector) (*MsgUpdateApprovedCollectorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateApprovedCollector not implemented")
}
func (*UnimplementedMsgServer) DeleteApprovedCollector(ctx context.Context, req *MsgDeleteApprovedCollector) (*MsgDeleteApprovedCollectorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteApprovedCollector not implemented")
}
func (*UnimplementedMsgServer) IssueCredits(ctx context.Context, req *MsgIssueCredits) (*MsgIssueCreditsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IssueCredits not implemented")
}
func (*UnimplementedMsgServer) TransferCredit(ctx context.Context, req *MsgTransferCredit) (*MsgTransferCreditResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferCredit not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateIssuer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateIssuer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateIssuer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plasticcreditledger.plasticcredits.Msg/CreateIssuer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateIssuer(ctx, req.(*MsgCreateIssuer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateIssuer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateIssuer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateIssuer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plasticcreditledger.plasticcredits.Msg/UpdateIssuer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateIssuer(ctx, req.(*MsgUpdateIssuer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteIssuer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteIssuer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteIssuer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plasticcreditledger.plasticcredits.Msg/DeleteIssuer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteIssuer(ctx, req.(*MsgDeleteIssuer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateApprovedCollector_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateApprovedCollector)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateApprovedCollector(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plasticcreditledger.plasticcredits.Msg/CreateApprovedCollector",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateApprovedCollector(ctx, req.(*MsgCreateApprovedCollector))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateApprovedCollector_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateApprovedCollector)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateApprovedCollector(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plasticcreditledger.plasticcredits.Msg/UpdateApprovedCollector",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateApprovedCollector(ctx, req.(*MsgUpdateApprovedCollector))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteApprovedCollector_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteApprovedCollector)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteApprovedCollector(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plasticcreditledger.plasticcredits.Msg/DeleteApprovedCollector",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteApprovedCollector(ctx, req.(*MsgDeleteApprovedCollector))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_IssueCredits_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgIssueCredits)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).IssueCredits(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plasticcreditledger.plasticcredits.Msg/IssueCredits",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).IssueCredits(ctx, req.(*MsgIssueCredits))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_TransferCredit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgTransferCredit)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).TransferCredit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plasticcreditledger.plasticcredits.Msg/TransferCredit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).TransferCredit(ctx, req.(*MsgTransferCredit))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "plasticcreditledger.plasticcredits.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateIssuer",
			Handler:    _Msg_CreateIssuer_Handler,
		},
		{
			MethodName: "UpdateIssuer",
			Handler:    _Msg_UpdateIssuer_Handler,
		},
		{
			MethodName: "DeleteIssuer",
			Handler:    _Msg_DeleteIssuer_Handler,
		},
		{
			MethodName: "CreateApprovedCollector",
			Handler:    _Msg_CreateApprovedCollector_Handler,
		},
		{
			MethodName: "UpdateApprovedCollector",
			Handler:    _Msg_UpdateApprovedCollector_Handler,
		},
		{
			MethodName: "DeleteApprovedCollector",
			Handler:    _Msg_DeleteApprovedCollector_Handler,
		},
		{
			MethodName: "IssueCredits",
			Handler:    _Msg_IssueCredits_Handler,
		},
		{
			MethodName: "TransferCredit",
			Handler:    _Msg_TransferCredit_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "plasticcredits/tx.proto",
}

func (m *MsgCreateIssuer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateIssuer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateIssuer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Addr) > 0 {
		i -= len(m.Addr)
		copy(dAtA[i:], m.Addr)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Addr)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateIssuerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateIssuerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateIssuerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateIssuer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateIssuer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateIssuer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Addr) > 0 {
		i -= len(m.Addr)
		copy(dAtA[i:], m.Addr)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Addr)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateIssuerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateIssuerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateIssuerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteIssuer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteIssuer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteIssuer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Addr) > 0 {
		i -= len(m.Addr)
		copy(dAtA[i:], m.Addr)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Addr)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteIssuerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteIssuerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteIssuerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateApprovedCollector) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateApprovedCollector) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateApprovedCollector) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Issuer) > 0 {
		i -= len(m.Issuer)
		copy(dAtA[i:], m.Issuer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Issuer)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Addr) > 0 {
		i -= len(m.Addr)
		copy(dAtA[i:], m.Addr)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Addr)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateApprovedCollectorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateApprovedCollectorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateApprovedCollectorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateApprovedCollector) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateApprovedCollector) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateApprovedCollector) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Issuer) > 0 {
		i -= len(m.Issuer)
		copy(dAtA[i:], m.Issuer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Issuer)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Addr) > 0 {
		i -= len(m.Addr)
		copy(dAtA[i:], m.Addr)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Addr)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateApprovedCollectorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateApprovedCollectorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateApprovedCollectorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteApprovedCollector) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteApprovedCollector) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteApprovedCollector) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Issuer) > 0 {
		i -= len(m.Issuer)
		copy(dAtA[i:], m.Issuer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Issuer)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Addr) > 0 {
		i -= len(m.Addr)
		copy(dAtA[i:], m.Addr)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Addr)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteApprovedCollectorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteApprovedCollectorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteApprovedCollectorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgIssueCredits) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgIssueCredits) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgIssueCredits) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Lng) > 0 {
		i -= len(m.Lng)
		copy(dAtA[i:], m.Lng)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Lng)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Lat) > 0 {
		i -= len(m.Lat)
		copy(dAtA[i:], m.Lat)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Lat)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Material) > 0 {
		i -= len(m.Material)
		copy(dAtA[i:], m.Material)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Material)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Collector) > 0 {
		i -= len(m.Collector)
		copy(dAtA[i:], m.Collector)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Collector)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Issuer) > 0 {
		i -= len(m.Issuer)
		copy(dAtA[i:], m.Issuer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Issuer)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgIssueCreditsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgIssueCreditsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgIssueCreditsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgTransferCredit) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTransferCredit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTransferCredit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NewOwner) > 0 {
		i -= len(m.NewOwner)
		copy(dAtA[i:], m.NewOwner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewOwner)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgTransferCreditResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTransferCreditResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTransferCreditResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateIssuer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Addr)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateIssuerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateIssuer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Addr)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateIssuerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteIssuer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Addr)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteIssuerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateApprovedCollector) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Addr)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Issuer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateApprovedCollectorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateApprovedCollector) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Addr)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Issuer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateApprovedCollectorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteApprovedCollector) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Addr)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Issuer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteApprovedCollectorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgIssueCredits) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Issuer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Collector)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Material)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Lat)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Lng)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgIssueCreditsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgTransferCredit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NewOwner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgTransferCreditResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateIssuer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateIssuer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateIssuer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Addr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Addr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateIssuerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateIssuerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateIssuerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateIssuer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateIssuer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateIssuer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Addr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Addr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateIssuerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateIssuerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateIssuerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteIssuer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteIssuer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteIssuer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Addr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Addr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteIssuerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteIssuerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteIssuerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateApprovedCollector) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateApprovedCollector: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateApprovedCollector: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Addr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Addr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Issuer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Issuer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateApprovedCollectorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateApprovedCollectorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateApprovedCollectorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateApprovedCollector) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateApprovedCollector: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateApprovedCollector: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Addr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Addr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Issuer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Issuer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateApprovedCollectorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateApprovedCollectorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateApprovedCollectorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteApprovedCollector) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteApprovedCollector: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteApprovedCollector: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Addr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Addr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Issuer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Issuer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteApprovedCollectorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteApprovedCollectorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteApprovedCollectorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgIssueCredits) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgIssueCredits: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgIssueCredits: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Issuer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Issuer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Collector", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Collector = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Material", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Material = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lat", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Lat = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lng", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Lng = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgIssueCreditsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgIssueCreditsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgIssueCreditsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTransferCredit) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTransferCredit: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTransferCredit: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewOwner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewOwner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTransferCreditResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTransferCreditResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTransferCreditResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
